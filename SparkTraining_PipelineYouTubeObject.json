{"paragraphs":[{"title":"Kolaylıklar Sağlayan Nesne ve fonksiyonları","text":"import org.apache.spark.ml.{Pipeline, PipelineStage}\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer, VectorAssembler}\nimport org.apache.spark.sql.{DataFrame}\n\nobject KolayGelsinNesnesi {\n\n  // Eğitim ve test setlerine ait dosya yolları\n  val filePathTrain = \"/user/erkan/veri_setlerim/adult/adult.data\"\n  val filePathTest = \"/user/erkan/veri_setlerim/adult/adult.test\"\n\n  \n  // İlk satırında başlık bilgisi bulunmayan veri yükleyici fonksiyon. Parametre olarak dosya yolu ve nitelik isimleri alır.\n  def BasliksizVeriyiYukle(path:String, sutunlar:Seq[String]):DataFrame = {\n    DataFrameTemizle(spark.read\n      .option(\"inferSchema\",\"true\")\n      .csv(path).toDF(sutunlar:_*))\n  }\n  \n  // İlk satırında başlık bilgisi bulunan veri yükleyici fonksiyon. Parametre olarak sadece dosya yolu alır.\n  def BaslikliVeriyiYukle(path:String):DataFrame = {\n    DataFrameTemizle(spark.read\n      .option(\"inferSchema\",\"true\")\n      .option(\"header\",\"true\")\n      .csv(path).toDF())\n  }\n  \n   // Burada veri setinde tespit edilen ? işaretine ait satırlar veri setinden çıkarılıyor.\n   // Analist tarafından bir şekilde ? işaretlerinin aşağıdaki üç sütunda bulunduğu tespit edilmiş.\n   // Fonksiyon temizlenmiş dataframe döndürüyor.\n   def DataFrameTemizle(df:DataFrame):DataFrame = {\n    val temizlenecekNitelikler = List(\"workclass\",\"occupation\",\"native_country\")\n    val pattern =\"?\"\n\n    val temizDF = temizlenecekNitelikler.foldRight(df)((columnName,df) => {\n      df.filter(s\"trim(${columnName})\" +  \" <> '\" + pattern +\"'\")\n    })\n    temizDF\n  }\n\n \n // Sütun ismini alır StringIndexer ve oneHotEncoder nesnesi oluşturur. Bu nesnelerin girdi ve çıktı sütun isimlerini belirler.\n // private olduğu için sadece nesne içinden erişilebilir.\n  private def buildOneHotPipeLine(colName:String):Array[PipelineStage] = {\n    val stringIndexer = new StringIndexer()\n      .setInputCol(s\"$colName\")\n      .setOutputCol(s\"${colName}_index\")\n\n    val oneHotEncoder = new OneHotEncoder()\n      .setInputCol(s\"${colName}_index\")\n      .setOutputCol(s\"${colName}_onehotindex\")\n\n    Array(stringIndexer,oneHotEncoder)\n  }\n\n  // Yukarıdaki metodu kullanarak her bir kategorik nitelik için string indexer ve onehotEncoder nesnesi oluşturuyor ve bunları bir Array[PipelineStage] içinde tutuyor.\n  def buildPipeLineForFeaturePreparation():Array[PipelineStage] = {\n    \n  \n    val workClassPipeLineStages = buildOneHotPipeLine(\"workclass\")\n    val educationPipelineStages = buildOneHotPipeLine(\"education\")\n    val occupationPipelineStages = buildOneHotPipeLine(\"occupation\")\n    val martialSatusStages = buildOneHotPipeLine(\"marital_status\")\n    val relationshipStages = buildOneHotPipeLine(\"relationship\")\n    val sexStages = buildOneHotPipeLine(\"sex\")\n    \n\n    Array.concat(workClassPipeLineStages,educationPipelineStages,martialSatusStages,\n                 occupationPipelineStages,relationshipStages,sexStages)\n\n  }\n\n  def buildDataPrepPipeLine():Array[PipelineStage] = {\n\n    val pipelineStagesforFeatures = KolayGelsinNesnesi.buildPipeLineForFeaturePreparation()\n\n    //Here we are using some numerical variables(ordinal) directly\n    val assembler = new VectorAssembler()\n      .setInputCols(Array(\"workclass_onehotindex\", \"occupation_onehotindex\", \"relationship_onehotindex\",\n        \"marital_status_onehotindex\",\"sex_onehotindex\",\"age\",\"education_num\",\"hours_per_week\"))\n      .setOutputCol(\"features\")\n\n    val labelIndexer = new StringIndexer()\n    //specify options\n    labelIndexer.setInputCol(\"salary\")\n    labelIndexer.setOutputCol(\"label\")\n\n    val pipelineStagesWithAssembler = pipelineStagesforFeatures.toList ::: List(assembler,labelIndexer)\n\n    pipelineStagesWithAssembler.toArray\n\n  }\n}\n","user":"admin","dateUpdated":"2017-12-28T06:11:52+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.{Pipeline, PipelineStage}\n\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer, VectorAssembler}\n\nimport org.apache.spark.sql.DataFrame\n\ndefined object KolayGelsinNesnesi\n"}]},"apps":[],"jobName":"paragraph_1514314016765_669537019","id":"20171226-204656_466293448","dateCreated":"2017-12-26T20:46:56+0200","dateStarted":"2017-12-28T06:08:59+0200","dateFinished":"2017-12-28T06:10:03+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6508"},{"title":"Veri yükle ve ilk dataframe'i oluştur","text":"import KolayGelsinNesnesi._\n\n// Veri seti başlık içermiyorsa nitelik isimlerini burada liste haline getir.\nval nitelikler = Seq(\"age\", \"workclass\",\"fnlwgt\",\"education\",\"education_num\",\"marital_status\",\"occupation\",\"relationship\",\"race\",\"sex\",\"capital_gain\",\"capital_loss\",\"hours_per_week\",\"native_country\",\"salary\")\n\n// KolayGelsinNesnesi nesnesinin BasliksizVeriyiYukle() metoduyla veri setini yükle. Bunun için dosya yolunu(String) ve nitelik isimleriniSeq[String] parametre olarak vermek gerekiyor. \nval salaryDF = BasliksizVeriyiYukle(filePathTrain, nitelikler)\n\nsalaryDF.printSchema()","user":"admin","dateUpdated":"2017-12-27T19:05:19+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","tableHide":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport KolayGelsinNesnesi._\n\nnitelikler: Seq[String] = List(age, workclass, fnlwgt, education, education_num, marital_status, occupation, relationship, race, sex, capital_gain, capital_loss, hours_per_week, native_country, salary)\n\nsalaryDF: org.apache.spark.sql.DataFrame = [age: int, workclass: string ... 13 more fields]\nroot\n |-- age: integer (nullable = true)\n |-- workclass: string (nullable = true)\n |-- fnlwgt: double (nullable = true)\n |-- education: string (nullable = true)\n |-- education_num: double (nullable = true)\n |-- marital_status: string (nullable = true)\n |-- occupation: string (nullable = true)\n |-- relationship: string (nullable = true)\n |-- race: string (nullable = true)\n |-- sex: string (nullable = true)\n |-- capital_gain: double (nullable = true)\n |-- capital_loss: double (nullable = true)\n |-- hours_per_week: double (nullable = true)\n |-- native_country: string (nullable = true)\n |-- salary: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1514314094903_-103130717","id":"20171226-204814_570064351","dateCreated":"2017-12-26T20:48:14+0200","dateStarted":"2017-12-27T00:58:48+0200","dateFinished":"2017-12-27T00:58:53+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6509"},{"text":"nitelikler.map(nitelik => println(s\"${nitelik}_00000\"))","user":"admin","dateUpdated":"2017-12-27T21:02:20+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"age_00000\nworkclass_00000\nfnlwgt_00000\neducation_00000\neducation_num_00000\nmarital_status_00000\noccupation_00000\nrelationship_00000\nrace_00000\nsex_00000\ncapital_gain_00000\ncapital_loss_00000\nhours_per_week_00000\nnative_country_00000\nsalary_00000\n\nres256: Seq[Unit] = List((), (), (), (), (), (), (), (), (), (), (), (), (), (), ())\n"}]},"apps":[],"jobName":"paragraph_1514399891532_-1393257759","id":"20171227-203811_2135536643","dateCreated":"2017-12-27T20:38:11+0200","dateStarted":"2017-12-27T21:02:20+0200","dateFinished":"2017-12-27T21:03:00+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6510"},{"title":"Veri Keşfi Nesnesi","text":"import KolayGelsinNesnesi._\nimport org.apache.log4j.{Level, Logger}\n\n// Eğitim veri setini df'e yüklemiştik. Bu nesne ile veri keşfi yapıyoruz.\nobject VeriKesfiNesnesi {\n    \n  // Veri setinde keşif yapan fonksiyon parametre olarak sadece bahse konu dataframe'i veriyoruz.\n  def temelIstatistikler(df:DataFrame) {\n\n    val rootLogger = Logger.getRootLogger()\n    rootLogger.setLevel(Level.ERROR)\n\n    val resultSet = df.count()\n    println(\"Toplam satır sayısı: \" +resultSet)\n    df.show(50)\n\n    //describe istatistiğini \n     println(\"Nümerik üç niteliğe ait istatistikler:\")\n    df.describe(\"age\",\"education_num\",\"hours_per_week\").show()\n    //similar to confusion matrix\n    println()\n    println(\"Sex ve salary için çapraz tablo:\")\n    df.stat.crosstab(\"sex\",\"salary\").show()\n    \n    // Hedef niteliğe göre grupla\n    println()\n    println(\"Hedef nitelik salary için gruplanmış gösterim:\")\n    val salaryGroup50K = df.groupBy(\"salary\").count()\n    salaryGroup50K.show()\n  }\n}","user":"admin","dateUpdated":"2017-12-28T06:15:08+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport Utils._\n\nimport org.apache.log4j.{Level, Logger}\n\ndefined object VeriKesfiNesnesi\n"}]},"apps":[],"jobName":"paragraph_1514314095259_-338597044","id":"20171226-204815_2011241539","dateCreated":"2017-12-26T20:48:15+0200","dateStarted":"2017-12-27T01:04:18+0200","dateFinished":"2017-12-27T01:04:57+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6511"},{"title":"Veri Keşfi Sonuçları Gör","text":"import VeriKesfiNesnesi._\ntemelIstatistikler(salaryDF)","user":"admin","dateUpdated":"2017-12-27T20:19:21+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport VeriKesfiNesnesi._\nToplam satır sayısı: 30162\n+---+-----------------+--------+-------------+-------------+--------------------+------------------+--------------+-------------------+-------+------------+------------+--------------+--------------+------+\n|age|        workclass|  fnlwgt|    education|education_num|      marital_status|        occupation|  relationship|               race|    sex|capital_gain|capital_loss|hours_per_week|native_country|salary|\n+---+-----------------+--------+-------------+-------------+--------------------+------------------+--------------+-------------------+-------+------------+------------+--------------+--------------+------+\n| 39|        State-gov| 77516.0|    Bachelors|         13.0|       Never-married|      Adm-clerical| Not-in-family|              White|   Male|      2174.0|         0.0|          40.0| United-States| <=50K|\n| 50| Self-emp-not-inc| 83311.0|    Bachelors|         13.0|  Married-civ-spouse|   Exec-managerial|       Husband|              White|   Male|         0.0|         0.0|          13.0| United-States| <=50K|\n| 38|          Private|215646.0|      HS-grad|          9.0|            Divorced| Handlers-cleaners| Not-in-family|              White|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 53|          Private|234721.0|         11th|          7.0|  Married-civ-spouse| Handlers-cleaners|       Husband|              Black|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 28|          Private|338409.0|    Bachelors|         13.0|  Married-civ-spouse|    Prof-specialty|          Wife|              Black| Female|         0.0|         0.0|          40.0|          Cuba| <=50K|\n| 37|          Private|284582.0|      Masters|         14.0|  Married-civ-spouse|   Exec-managerial|          Wife|              White| Female|         0.0|         0.0|          40.0| United-States| <=50K|\n| 49|          Private|160187.0|          9th|          5.0| Married-spouse-a...|     Other-service| Not-in-family|              Black| Female|         0.0|         0.0|          16.0|       Jamaica| <=50K|\n| 52| Self-emp-not-inc|209642.0|      HS-grad|          9.0|  Married-civ-spouse|   Exec-managerial|       Husband|              White|   Male|         0.0|         0.0|          45.0| United-States|  >50K|\n| 31|          Private| 45781.0|      Masters|         14.0|       Never-married|    Prof-specialty| Not-in-family|              White| Female|     14084.0|         0.0|          50.0| United-States|  >50K|\n| 42|          Private|159449.0|    Bachelors|         13.0|  Married-civ-spouse|   Exec-managerial|       Husband|              White|   Male|      5178.0|         0.0|          40.0| United-States|  >50K|\n| 37|          Private|280464.0| Some-college|         10.0|  Married-civ-spouse|   Exec-managerial|       Husband|              Black|   Male|         0.0|         0.0|          80.0| United-States|  >50K|\n| 30|        State-gov|141297.0|    Bachelors|         13.0|  Married-civ-spouse|    Prof-specialty|       Husband| Asian-Pac-Islander|   Male|         0.0|         0.0|          40.0|         India|  >50K|\n| 23|          Private|122272.0|    Bachelors|         13.0|       Never-married|      Adm-clerical|     Own-child|              White| Female|         0.0|         0.0|          30.0| United-States| <=50K|\n| 32|          Private|205019.0|   Assoc-acdm|         12.0|       Never-married|             Sales| Not-in-family|              Black|   Male|         0.0|         0.0|          50.0| United-States| <=50K|\n| 34|          Private|245487.0|      7th-8th|          4.0|  Married-civ-spouse|  Transport-moving|       Husband| Amer-Indian-Eskimo|   Male|         0.0|         0.0|          45.0|        Mexico| <=50K|\n| 25| Self-emp-not-inc|176756.0|      HS-grad|          9.0|       Never-married|   Farming-fishing|     Own-child|              White|   Male|         0.0|         0.0|          35.0| United-States| <=50K|\n| 32|          Private|186824.0|      HS-grad|          9.0|       Never-married| Machine-op-inspct|     Unmarried|              White|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 38|          Private| 28887.0|         11th|          7.0|  Married-civ-spouse|             Sales|       Husband|              White|   Male|         0.0|         0.0|          50.0| United-States| <=50K|\n| 43| Self-emp-not-inc|292175.0|      Masters|         14.0|            Divorced|   Exec-managerial|     Unmarried|              White| Female|         0.0|         0.0|          45.0| United-States|  >50K|\n| 40|          Private|193524.0|    Doctorate|         16.0|  Married-civ-spouse|    Prof-specialty|       Husband|              White|   Male|         0.0|         0.0|          60.0| United-States|  >50K|\n| 54|          Private|302146.0|      HS-grad|          9.0|           Separated|     Other-service|     Unmarried|              Black| Female|         0.0|         0.0|          20.0| United-States| <=50K|\n| 35|      Federal-gov| 76845.0|          9th|          5.0|  Married-civ-spouse|   Farming-fishing|       Husband|              Black|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 43|          Private|117037.0|         11th|          7.0|  Married-civ-spouse|  Transport-moving|       Husband|              White|   Male|         0.0|      2042.0|          40.0| United-States| <=50K|\n| 59|          Private|109015.0|      HS-grad|          9.0|            Divorced|      Tech-support|     Unmarried|              White| Female|         0.0|         0.0|          40.0| United-States| <=50K|\n| 56|        Local-gov|216851.0|    Bachelors|         13.0|  Married-civ-spouse|      Tech-support|       Husband|              White|   Male|         0.0|         0.0|          40.0| United-States|  >50K|\n| 19|          Private|168294.0|      HS-grad|          9.0|       Never-married|      Craft-repair|     Own-child|              White|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 39|          Private|367260.0|      HS-grad|          9.0|            Divorced|   Exec-managerial| Not-in-family|              White|   Male|         0.0|         0.0|          80.0| United-States| <=50K|\n| 49|          Private|193366.0|      HS-grad|          9.0|  Married-civ-spouse|      Craft-repair|       Husband|              White|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 23|        Local-gov|190709.0|   Assoc-acdm|         12.0|       Never-married|   Protective-serv| Not-in-family|              White|   Male|         0.0|         0.0|          52.0| United-States| <=50K|\n| 20|          Private|266015.0| Some-college|         10.0|       Never-married|             Sales|     Own-child|              Black|   Male|         0.0|         0.0|          44.0| United-States| <=50K|\n| 45|          Private|386940.0|    Bachelors|         13.0|            Divorced|   Exec-managerial|     Own-child|              White|   Male|         0.0|      1408.0|          40.0| United-States| <=50K|\n| 30|      Federal-gov| 59951.0| Some-college|         10.0|  Married-civ-spouse|      Adm-clerical|     Own-child|              White|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 22|        State-gov|311512.0| Some-college|         10.0|  Married-civ-spouse|     Other-service|       Husband|              Black|   Male|         0.0|         0.0|          15.0| United-States| <=50K|\n| 48|          Private|242406.0|         11th|          7.0|       Never-married| Machine-op-inspct|     Unmarried|              White|   Male|         0.0|         0.0|          40.0|   Puerto-Rico| <=50K|\n| 21|          Private|197200.0| Some-college|         10.0|       Never-married| Machine-op-inspct|     Own-child|              White|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 19|          Private|544091.0|      HS-grad|          9.0|   Married-AF-spouse|      Adm-clerical|          Wife|              White| Female|         0.0|         0.0|          25.0| United-States| <=50K|\n| 48| Self-emp-not-inc|265477.0|   Assoc-acdm|         12.0|  Married-civ-spouse|    Prof-specialty|       Husband|              White|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 31|          Private|507875.0|          9th|          5.0|  Married-civ-spouse| Machine-op-inspct|       Husband|              White|   Male|         0.0|         0.0|          43.0| United-States| <=50K|\n| 53| Self-emp-not-inc| 88506.0|    Bachelors|         13.0|  Married-civ-spouse|    Prof-specialty|       Husband|              White|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 24|          Private|172987.0|    Bachelors|         13.0|  Married-civ-spouse|      Tech-support|       Husband|              White|   Male|         0.0|         0.0|          50.0| United-States| <=50K|\n| 49|          Private| 94638.0|      HS-grad|          9.0|           Separated|      Adm-clerical|     Unmarried|              White| Female|         0.0|         0.0|          40.0| United-States| <=50K|\n| 25|          Private|289980.0|      HS-grad|          9.0|       Never-married| Handlers-cleaners| Not-in-family|              White|   Male|         0.0|         0.0|          35.0| United-States| <=50K|\n| 57|      Federal-gov|337895.0|    Bachelors|         13.0|  Married-civ-spouse|    Prof-specialty|       Husband|              Black|   Male|         0.0|         0.0|          40.0| United-States|  >50K|\n| 53|          Private|144361.0|      HS-grad|          9.0|  Married-civ-spouse| Machine-op-inspct|       Husband|              White|   Male|         0.0|         0.0|          38.0| United-States| <=50K|\n| 44|          Private|128354.0|      Masters|         14.0|            Divorced|   Exec-managerial|     Unmarried|              White| Female|         0.0|         0.0|          40.0| United-States| <=50K|\n| 41|        State-gov|101603.0|    Assoc-voc|         11.0|  Married-civ-spouse|      Craft-repair|       Husband|              White|   Male|         0.0|         0.0|          40.0| United-States| <=50K|\n| 29|          Private|271466.0|    Assoc-voc|         11.0|       Never-married|    Prof-specialty| Not-in-family|              White|   Male|         0.0|         0.0|          43.0| United-States| <=50K|\n| 25|          Private| 32275.0| Some-college|         10.0|  Married-civ-spouse|   Exec-managerial|          Wife|              Other| Female|         0.0|         0.0|          40.0| United-States| <=50K|\n| 47|          Private| 51835.0|  Prof-school|         15.0|  Married-civ-spouse|    Prof-specialty|          Wife|              White| Female|         0.0|      1902.0|          60.0|      Honduras|  >50K|\n| 50|      Federal-gov|251585.0|    Bachelors|         13.0|            Divorced|   Exec-managerial| Not-in-family|              White|   Male|         0.0|         0.0|          55.0| United-States|  >50K|\n+---+-----------------+--------+-------------+-------------+--------------------+------------------+--------------+-------------------+-------+------------+------------+--------------+--------------+------+\nonly showing top 50 rows\n\nNümerik üç niteliğe ait istatistikler:\n+-------+------------------+------------------+-----------------+\n|summary|               age|     education_num|   hours_per_week|\n+-------+------------------+------------------+-----------------+\n|  count|             30162|             30162|            30162|\n|   mean|38.437901995888865| 10.12131158411246|40.93123798156621|\n| stddev|13.134664776856017|2.5499949188567355|11.97998422927489|\n|    min|                17|               1.0|              1.0|\n|    max|                90|              16.0|             99.0|\n+-------+------------------+------------------+-----------------+\n\n\nSex ve salary için çapraz tablo:\n+----------+------+-----+\n|sex_salary| <=50K| >50K|\n+----------+------+-----+\n|      Male| 13984| 6396|\n|    Female|  8670| 1112|\n+----------+------+-----+\n\n\nHedef nitelik salary için gruplanmış gösterim:\n+------+-----+\n|salary|count|\n+------+-----+\n|  >50K| 7508|\n| <=50K|22654|\n+------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1514328112569_-1461119861","id":"20171227-004152_1444359581","dateCreated":"2017-12-27T00:41:52+0200","dateStarted":"2017-12-27T01:05:18+0200","dateFinished":"2017-12-27T01:05:39+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6512"},{"title":"Hedef Değişkeni 1 veya 0 yap (LabelIndexing)","text":"// Hedef değişkeni indeksleyen nesne\nobject HedefDegiskenIndeksleme {\n    // dataframe ve hedef niteliğin adını alır hedefNitelik_index adlı yeni bir sütunda çok tekrarlanan niteliğe 0, diğerine 1 atar\n    // sonuç olarak ilave bir sütunla yeni bir dataframe döndürür\n    def hedefDegiskeniIndeksle(df:DataFrame, hedefNitelik:String):DataFrame = {\n        \n        // Hedef niteliği indekslemek için yeni nesne oluştur\n        val labelIndexer = new StringIndexer()\n        //nesnenin input ve output isimlerini belirle\n        labelIndexer.setInputCol(hedefNitelik)\n        labelIndexer.setOutputCol(s\"${hedefNitelik}_index\")\n    \n        //nesneye içinde hedefniteliğin (ismi yukarıdaki setInputCol() ile aynı olan) bulunduğu df'i veriyoruz. labelIndexer nesnesi öğreniyor. (aslında <=50 ve >50) leri sayıyor.\n        val labelIndexerTransformer = labelIndexer.fit(df)\n        \n        // öğrenme esnasında öğrendiği labelları burada yazsın (hedef değişkendeki benzersiz değerler)\n        println(\"labels are \"+ labelIndexerTransformer.labels.toList)\n    \n        // model nesnesi olan labelIndexerTransformer öğrendiklerini dataframe üzerine uygulasın ve yeni bir dataframe oluştursun. Bu dataframe methodun döndürdüğü dataframe dir.\n        labelIndexerTransformer.transform(df)\n    }\n}\n","user":"admin","dateUpdated":"2017-12-27T20:12:37+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndefined object HedefDegiskenIndeksleme\n"}]},"apps":[],"jobName":"paragraph_1514328113948_1771955794","id":"20171227-004153_1511674677","dateCreated":"2017-12-27T00:41:53+0200","dateStarted":"2017-12-27T20:10:54+0200","dateFinished":"2017-12-27T20:11:41+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6513"},{"title":"Hedef Değişkenin (salary) indexli halinin olduğu yeni df (salaryDF2)","text":"import HedefDegiskenIndeksleme._\nval salaryDF2 = hedefDegiskeniIndeksle(salaryDF, \"salary\")\nsalaryDF2.select(\"salary\",\"salary_index\").show()\n","user":"admin","dateUpdated":"2017-12-27T20:15:53+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","tableHide":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport HedefDegiskenIndeksleme._\nlabels are List( <=50K,  >50K)\n\nsalaryDF2: org.apache.spark.sql.DataFrame = [age: int, workclass: string ... 14 more fields]\n+------+------------+\n|salary|salary_index|\n+------+------------+\n| <=50K|         0.0|\n| <=50K|         0.0|\n| <=50K|         0.0|\n| <=50K|         0.0|\n| <=50K|         0.0|\n| <=50K|         0.0|\n| <=50K|         0.0|\n|  >50K|         1.0|\n|  >50K|         1.0|\n|  >50K|         1.0|\n|  >50K|         1.0|\n|  >50K|         1.0|\n| <=50K|         0.0|\n| <=50K|         0.0|\n| <=50K|         0.0|\n| <=50K|         0.0|\n| <=50K|         0.0|\n| <=50K|         0.0|\n|  >50K|         1.0|\n|  >50K|         1.0|\n+------+------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1514328112104_-1294523588","id":"20171227-004152_644810916","dateCreated":"2017-12-27T00:41:52+0200","dateStarted":"2017-12-27T20:11:58+0200","dateFinished":"2017-12-27T20:14:14+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6514"},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1514328111335_-1194104125","id":"20171227-004151_719674186","dateCreated":"2017-12-27T00:41:51+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6515","text":"import KolayGelsinNesnesi._\nimport org.apache.spark\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.linalg.Vectors\n\nobject SalaryVectorAssembler {\n\n    val assembler = new VectorAssembler()\n      .setInputCols(Array(\"workclass_onehotindex\", \"occupation_onehotindex\", \"relationship_onehotindex\",\n        \"marital_status_onehotindex\",\"sex_onehotindex\",\"age\",\"education_num\",\"hours_per_week\"))\n      .setOutputCol(\"features\")\n\n    //Pipeline Estimator\n    val pipelineStagesforFeatures = KolayGelsinNesnesi.buildPipeLineForFeaturePreparation()\n\n    val pipelineStagesWithAssembler = pipelineStagesforFeatures.toList ::: List(assembler)\n\n    val pipeline = new Pipeline().setStages(pipelineStagesWithAssembler.toArray)\n    //Model generated and data tronsformed\n    val featurisedDF = pipeline.fit(salaryDF2).transform(salaryDF2)\n\n    featurisedDF.select(\"features\").show(truncate = false)\n\n\n}","dateUpdated":"2017-12-28T06:18:06+0200","dateFinished":"2017-12-28T06:19:33+0200","dateStarted":"2017-12-28T06:18:06+0200","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport KolayGelsinNesnesi._\n\nimport org.apache.spark\n\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.feature.VectorAssembler\n\nimport org.apache.spark.ml.linalg.Vectors\n\ndefined object SalaryVectorAssembler\n+------------------------------------------------------------------+\n|features                                                          |\n+------------------------------------------------------------------+\n|(34,[3,9,20,25,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,39.0,13.0,40.0]) |\n|(34,[1,8,19,24,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,50.0,13.0,13.0]) |\n|(34,[0,14,20,26,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,38.0,9.0,40.0]) |\n|(34,[0,14,19,24,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,53.0,7.0,40.0]) |\n|(34,[0,6,23,24,31,32,33],[1.0,1.0,1.0,1.0,28.0,13.0,40.0])        |\n|(34,[0,8,23,24,31,32,33],[1.0,1.0,1.0,1.0,37.0,14.0,40.0])        |\n|(34,[0,11,20,29,31,32,33],[1.0,1.0,1.0,1.0,49.0,5.0,16.0])        |\n|(34,[1,8,19,24,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,52.0,9.0,45.0])  |\n|(34,[0,6,20,25,31,32,33],[1.0,1.0,1.0,1.0,31.0,14.0,50.0])        |\n|(34,[0,8,19,24,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,42.0,13.0,40.0]) |\n|(34,[0,8,19,24,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,37.0,10.0,80.0]) |\n|(34,[3,6,19,24,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,30.0,13.0,40.0]) |\n|(34,[0,9,21,25,31,32,33],[1.0,1.0,1.0,1.0,23.0,13.0,30.0])        |\n|(34,[0,10,20,25,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,32.0,12.0,50.0])|\n|(34,[0,13,19,24,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,34.0,4.0,45.0]) |\n|(34,[1,15,21,25,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,25.0,9.0,35.0]) |\n|(34,[0,12,22,25,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,32.0,9.0,40.0]) |\n|(34,[0,10,19,24,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,38.0,7.0,50.0]) |\n|(34,[1,8,22,26,31,32,33],[1.0,1.0,1.0,1.0,43.0,14.0,45.0])        |\n|(34,[0,6,19,24,30,31,32,33],[1.0,1.0,1.0,1.0,1.0,40.0,16.0,60.0]) |\n+------------------------------------------------------------------+\nonly showing top 20 rows\n\n"}]}},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1514328110539_2028183238","id":"20171227-004150_409115733","dateCreated":"2017-12-27T00:41:50+0200","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:6516"},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1514328109792_2117829731","id":"20171227-004149_1046136549","dateCreated":"2017-12-27T00:41:49+0200","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:6517"},{"user":"admin","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1514314094457_-1509003198","id":"20171226-204814_1126559094","dateCreated":"2017-12-26T20:48:14+0200","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:6518"}],"name":"SparkTraining/PipelineYouTubeObject","id":"2D2W619JK","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CY64P8KM:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}